networks:
  sample-micro-service-network:
    driver: bridge

services:
  postgres:
    networks:
      - sample-micro-service-network
    container_name: postgres
    image: postgres:16.1
    restart: always
    env_file:
      - .env.local
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./package-go/database/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d sample_micro_service"]
      interval: 5s
      timeout: 5s
      retries: 10

  app-service:
    networks:
      - sample-micro-service-network
    container_name: app-service
    build:
      context: .
      dockerfile: ./apps/backend/app-service/Dockerfile.dev
    env_file:
      - .env.local
    ports:
      - "3003:3003"
    volumes:
      - ./apps/backend/app-service:/app
      - ./package-go:/package-go
      - go_mod_cache:/go/pkg/mod
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  app-web:
    networks:
      - sample-micro-service-network
    container_name: app-web
    build:
      context: .
      dockerfile: ./apps/frontend/app-web/Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./.local/gcloud:/root/.config/gcloud # save application default credentials
    env_file:
      - .env.local
    develop:
      watch:
        - action: sync
          path: ./apps/frontend/app-web/src
          target: /workspace/apps/frontend/app-web/src
        - action: sync
          path: ./apps/frontend/app-web/next.config.ts
          target: /workspace/apps/frontend/app-web/next.config.ts
        - action: sync
          path: ./package-ts
          target: /workspace/package-ts
        - action: sync
          path: ./doc/api
          target: /workspace/doc/api
        - action: rebuild
          path: ./apps/frontend/app-web/package.json
        - action: rebuild
          path: ./package-ts/package.json
    restart: always
    depends_on:
      app-service:
        condition: service_healthy

volumes:
  postgres_data:
  go_mod_cache:
